drop policy "Enable all for owner users" on "public"."Forms";

revoke delete on table "public"."Forms" from "anon";

revoke insert on table "public"."Forms" from "anon";

revoke references on table "public"."Forms" from "anon";

revoke select on table "public"."Forms" from "anon";

revoke trigger on table "public"."Forms" from "anon";

revoke truncate on table "public"."Forms" from "anon";

revoke update on table "public"."Forms" from "anon";

revoke delete on table "public"."Forms" from "authenticated";

revoke insert on table "public"."Forms" from "authenticated";

revoke references on table "public"."Forms" from "authenticated";

revoke select on table "public"."Forms" from "authenticated";

revoke trigger on table "public"."Forms" from "authenticated";

revoke truncate on table "public"."Forms" from "authenticated";

revoke update on table "public"."Forms" from "authenticated";

revoke delete on table "public"."Forms" from "service_role";

revoke insert on table "public"."Forms" from "service_role";

revoke references on table "public"."Forms" from "service_role";

revoke select on table "public"."Forms" from "service_role";

revoke trigger on table "public"."Forms" from "service_role";

revoke truncate on table "public"."Forms" from "service_role";

revoke update on table "public"."Forms" from "service_role";

alter table "public"."Forms" drop constraint "Forms_pkey";

drop index if exists "public"."Forms_pkey";

drop table "public"."Forms";

create table "public"."Form_Templates" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "owner" uuid default auth.uid(),
    "history" jsonb,
    "config" jsonb,
    "status" "Form Status" default 'draft'::"Form Status",
    "name" text
);


alter table "public"."Form_Templates" enable row level security;

CREATE UNIQUE INDEX "Forms_pkey" ON public."Form_Templates" USING btree (id);

alter table "public"."Form_Templates" add constraint "Forms_pkey" PRIMARY KEY using index "Forms_pkey";

grant delete on table "public"."Form_Templates" to "anon";

grant insert on table "public"."Form_Templates" to "anon";

grant references on table "public"."Form_Templates" to "anon";

grant select on table "public"."Form_Templates" to "anon";

grant trigger on table "public"."Form_Templates" to "anon";

grant truncate on table "public"."Form_Templates" to "anon";

grant update on table "public"."Form_Templates" to "anon";

grant delete on table "public"."Form_Templates" to "authenticated";

grant insert on table "public"."Form_Templates" to "authenticated";

grant references on table "public"."Form_Templates" to "authenticated";

grant select on table "public"."Form_Templates" to "authenticated";

grant trigger on table "public"."Form_Templates" to "authenticated";

grant truncate on table "public"."Form_Templates" to "authenticated";

grant update on table "public"."Form_Templates" to "authenticated";

grant delete on table "public"."Form_Templates" to "service_role";

grant insert on table "public"."Form_Templates" to "service_role";

grant references on table "public"."Form_Templates" to "service_role";

grant select on table "public"."Form_Templates" to "service_role";

grant trigger on table "public"."Form_Templates" to "service_role";

grant truncate on table "public"."Form_Templates" to "service_role";

grant update on table "public"."Form_Templates" to "service_role";

create policy "Enable all for owner users"
on "public"."Form_Templates"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = owner))
with check ((( SELECT auth.uid() AS uid) = owner));